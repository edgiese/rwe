// multi-div routines
// NOTE:  this is a specially formatted js file.  Comments and function bracketing are NOT arbitrary!
// especially, do not use the comment sequence //- except intentionally!

/////////////////////////////////////////////////////////// setup routine
// initial setup
//-!setup
//-:ovlydef param.ovlydef
//-:recipedef param.recipedef
//-<jquery.js
//-<fglib.js
function () {
	if (typeof(fg.multi_QQaushort) == 'undefined')
		fg.multi_QQaushort={};
	fg.multi_QQaushort.show=function(action,overlayix,speed,callback) {
		if (fg.multi_QQaushort.ovlyon[overlayix] == true)
			return false;
		overlay=fg.multi_QQaushort.ovlys[overlayix];
		switch (action) {
			case 2:
				$(overlay).fadeIn(speed,callback);
			break;
			case 3:
				$(overlay).slideDown(speed,callback);
			break;
			default:
				$(overlay).show(speed,callback);
			break;
		}
		fg.multi_QQaushort.ovlyon[overlayix]=1;
		if (speed > 0) {
			fg.multi_QQaushort.busy++;
			return true;
		} else
			return false;	
	};
	fg.multi_QQaushort.hide=function(action,overlayix,speed,callback) {
		if (fg.multi_QQaushort.ovlyon[overlayix] === false)
			return false;
		overlay=fg.multi_QQaushort.ovlys[overlayix];
		switch (action) {
			case 2:
				$(overlay).fadeOut(speed,callback);
			break;
			case 3:
				$(overlay).slideUp(speed,callback);
			break;
			default:
				$(overlay).hide(speed,callback);
			break;
		}
		fg.multi_QQaushort.ovlyon[overlayix]=0;
		if (speed > 0) {
			fg.multi_QQaushort.busy++;
			return true;
		} else
			return false;	
	};
	fg.multi_QQaushort.execute=function(recipeix,ix) {
		if (fg.multi_QQaushort.timeout !== 0) {
			window.clearTimeout(fg.multi_QQaushort.timeout);
			fg.multi_QQaushort.timeout=0;
		}
//		if (fg.multi_QQaushort.busy > 0) {
//			fg.multi_QQaushort.stackedrecipeix=recipeix;
//			fg.multi_QQaushort.stackedix=ix;
//			return;
//		}
		var recipe=fg.multi_QQaushort.recipes[recipeix];
		while (ix < recipe.length) {
			var action=recipe[ix][0];
			var data=recipe[ix][1];
			var overlayix=recipe[ix][2];
			var pause=false;
			var hide=false;
			if (action < 0) {
				action=-action;
				pause=true;
			}
			if (action > 50 && action < 100) {
				action -= 50;
				hide=true;
			}
			if (action >= 1 && action <= 3) {
				// show or hide overlay
				callback=(pause === true) ? function() {
					fg.multi_QQaushort.busy=Math.floor(0,fg.multi_QQaushort.busy-1);
					if (fg.multi_QQaushort.stackedrecipeix !== 0) {
						recipeix=fg.multi_QQaushort.stackedrecipeix;
						ix=fg.multi_QQaushort.stackedix-1;
						fg.multi_QQaushort.stackedrecipeix=0;
						fg.multi_QQaushort.stackedix=0;
					}
					fg.multi_QQaushort.execute(recipeix,ix+1);
				} : function() {
					fg.multi_QQaushort.busy=Math.floor(0,fg.multi_QQaushort.busy-1);
					if (fg.multi_QQaushort.busy === 0 && fg.multi_QQaushort.stackedrecipeix !== 0) {
						recipeix=fg.multi_QQaushort.stackedrecipeix;
						ix=fg.multi_QQaushort.stackedix;
						fg.multi_QQaushort.stackedrecipeix=0;
						fg.multi_QQaushort.stackedix=0;
						fg.multi_QQaushort.execute(recipeix,ix);
					}
				};
				if (hide === true)
					pause = fg.multi_QQaushort.hide(action,overlayix,data,callback) && pause;
				else	
					pause = fg.multi_QQaushort.show(action,overlayix,data,callback) && pause;
				if (pause === true)
					return;
			} else if (action == 100) {
				// delay
				if (fg.multi_QQaushort.timeout !== 0) {
					window.clearTimeout(fg.multi_QQaushort.timeout);
					fg.multi_QQaushort.timeout=0;
				}
				fg.multi_QQaushort.timeout=window.setTimeout(function() {
					fg.multi_QQaushort.timeout=0;
					fg.multi_QQaushort.execute(recipeix,ix+1);
				},data);
				return;
			} else if (action == 101) {
				// do
				if (fg.multi_QQaushort.timeout !== 0) {
					fg.multi_QQaushort.timeout=0;
					window.clearTimeout(fg.multi_QQaushort.timeout);
				}
				fg.multi_QQaushort.busy=0;
				fg.multi_QQaushort.stackedrecipeix=0;
				fg.multi_QQaushort.stackedix=0;
				fg.multi_QQaushort.execute(data,0);
				return;
			}
			++ix;
		} // loop for all recipe elements
	};
	fg.multi_QQaushort.stackedrecipeix=0;
	fg.multi_QQaushort.stackedix=0;
	fg.multi_QQaushort.busy=0;
	fg.multi_QQaushort.safetytimeout=0;
	fg.multi_QQaushort.ovlys=new Array;
	// code generated by server:
	param.ovlydef;
	fg.multi_QQaushort.ovlyon=new Array;
	var i;
	for (i=0; i<fg.multi_QQaushort.ovlys.length; ++i)
		fg.multi_QQaushort.ovlyon[i]=false;
	fg.multi_QQaushort.recipes=new Array;
	// code generated by server:
	param.recipedef;
	for (i=0; i<fg.multi_QQaushort.recipes[1].length; ++i) {
		if (Math.abs(fg.multi_QQaushort.recipes[1][i][0]) > 0 && Math.abs(fg.multi_QQaushort.recipes[1][i][0]) < 50)
		fg.multi_QQaushort.ovlyon[fg.multi_QQaushort.recipes[1][i][2]]=true;
	}
	for (i=0; i<fg.multi_QQaushort.ovlyon.length; ++i) {
		if (fg.multi_QQaushort.ovlyon[i] === true)
			$(fg.multi_QQaushort.ovlys[i]).show();
		else	
			$(fg.multi_QQaushort.ovlys[i]).hide();
	}
	fg.multi_QQaushort.execute(1,0);		
}//-}



// adds a trigger 
//-!addtrigger
//-:recipe param.recipe
//-:triggername param.triggername
//-<jquery.js
function () {
	$('#param.triggername').mouseover(function(event){
		fg.multi_QQaushort.execute(param.recipe,0);	
	});
	$('#param.triggername').mouseout(function(event){
		fg.multi_QQaushort.execute(0,0);	
	});
}//-}

// moves a trigger 
//-!movetrigger
//-:mimicsel param.mimicsel
//-:triggersel param.triggersel
//-<jquery.js
function () {
	var mimicpos=$('param.mimicsel').position();
	var mimicheight=$('param.mimicsel').outerHeight(false);
	var mimicwidth=$('param.mimicsel').outerWidth(false);
	$('param.triggersel').css('position','absolute').css('height',mimicheight).css('width',mimicwidth).css('left',mimicpos.left).css('top',mimicpos.top);
	delete mimicpos; delete mimicheight; delete mimicwidth;
}//-}

